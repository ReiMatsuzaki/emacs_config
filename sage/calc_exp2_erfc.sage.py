# This file was *autogenerated* from the file calc_exp2_erfc.sage
from sage.all_cmdline import *   # import sage library
_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_200 = Integer(200); _sage_const_10000 = Integer(10000); _sage_const_0 = Integer(0); _sage_const_1000 = Integer(1000)# 
# Calculation of Exp(x^2)Erfc(x) in high accuracy for reference.
#

def exp2_erfc(x):
    return exp(x*x)*error_fcn(x)

def print_one(f, x):
    y = exp2_erfc(x)
    line = "(char*)\""+str(x)+"\",\n(char*)\""+str(y)+"\",\n"
    f.write(line)


# start calculation
f = open('result/ref_real200_exp2_erfc.h', 'w')

RF=RealField(_sage_const_200 )
xmin = RF(_sage_const_1 )/_sage_const_10000 
xmax = RF(_sage_const_1000 )
ratio=RF(_sage_const_2 )
x = xmin
i=_sage_const_0 
f.write("char* x_y_exp2_erfc[] = {\n")
while x < _sage_const_2 *xmax:
    i+=_sage_const_1 
    print_one(f, x)
    x*=ratio
f.write("};\n")
f.write("unsigned int num_exp2_erfc = "+str(i)+";\n")
f.close()

    


